// использование миксимонов из другого файла as - далее сокращенное название 
@use 'includes/style1' as st;

$myVar: #e2e2e2;

body {
  $localVar: green;
  background: $myVar;
  font-family: sans-serif;
  font-size: 120%;
  
}

.message {

  width: 600px;
  margin: 0 auto;
  border: 1px solid #fcf9f9;
  border-radius: 5px;
  padding: 10px;
  background-color: #fff;
  margin-top: 20px;
  hr {
    border:none;
    border-bottom: 1px solid #eaeaea;
    margin: 10px 0;
  }

  .from {
    font-size: 120%;
    font-weight: bold;

    &::before {
      content: "от: ";
      color: #868686;
    }
  }

  &--important {
    background-color: rgb(247, 232, 235);
    border-color: rgb(241, 148, 167);

    hr {
      border-color: rgb(241, 148, 167);
    }
  }
}

// Интерполяция

$var: 'ss';

.myCla#{$var} {
  color: rgb(159, 137, 182);

}

// программирование

$myVar: true;

// @if ($myVar) {
//   .myClass {
//     background:red;
//   }
// }
// @else {
//   .myClass {
//     background: green;
//   }
// }

.myClass {
  background: if($myVar, green, red)
}

//Цикл

@for $i from 1 to 10 
{
  .class--#{$i}
  {color: red;}
}

$buttonColors: 
  'primary' blue,
  'error' red,
  'success' green;

@each $btnName, $color in $buttonColors {
  button.btn--#{$btnName} {
    background: $color;
    color: #fff;
  }
}

main {
  width: 700px;
  margin: 30px auto;
  img {
    display: block;
    margin: auto;
  
    width: 100%;
    max-width: 100%;
    height: auto;
  
    @for $i from 1 to 10 {
      &.w#{$i} {width: 10% * $i;}
    }
  }
}



//мексины - переиспользованые блоки правил

@mixin fancy {
  color: red;
  text-shadow: 0 0 15px blue;
}

h1 {
  @include fancy;
  font-size: 150%;
}

ul {
  @include fancy;
}

//миксины с параметрами || 


// использование миксимонов из другого файла
.avatar {
  @include st.avatar(75px, $isInvert: true);
}

.avatar-big {
  @include st.avatar(150px, 50%, true) {
    margin-left: 50px;
  }
}